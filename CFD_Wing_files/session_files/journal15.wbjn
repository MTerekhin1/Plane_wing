# encoding: utf-8
# 2022 R1
SetScriptVersion(Version="22.1.217")
system1 = GetSystem(Name="FFF")
results1 = system1.GetContainer(ComponentName="Results")
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update
EXPORT:
 Export File = C:/Users/mter153/OneDrive - The University of Auckland/Documents/ENGSCI 344/Pressure_0.csv
 Export Chart Name = Chart 1
 Overwrite = On
END
>export chart""")
results1.SendCommand(Command=">report save, format=preview")
results1.Exit()
designPoint1 = Parameters.CreateDesignPoint()
parameter1 = Parameters.GetParameter(Name="P32")
designPoint1.SetParameterExpression(
    Parameter=parameter1,
    Expression="15 [degree]")
backgroundSession1 = UpdateAllDesignPoints(DesignPoints=[designPoint1])
setup1 = system1.GetContainer(ComponentName="Setup")
setup1.SendCommand(Command='(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 0)(cx-gui-do cx-activate-tab-index "NavigationPane*Frame1(TreeTab)" 1)')
setup1.SendCommand(Command='(%py-exec "preferences.fixState()")')
setup1.SendCommand(Command="(%py-exec \"preferences.setState({r'Appearance': None,r'GPUApp': None,r'General': None,r'Graphics': None,r'MatProApp': None,r'MeshingWorkflow': None,r'Navigation': None,r'PrjApp': None,r'Simulation': None,r'TurboWorkflow': None,})\")")
setup1.SendCommand(Command='/file/set-tui-version "22.1"')
designPoint1.Delete()
designPoint2 = Parameters.GetDesignPoint(Name="0")
Parameters.SetBaseDesignPoint(DesignPoint=designPoint2)
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update
EXPORT:
 Export File = C:/Users/mter153/OneDrive - The University of Auckland/Documents/ENGSCI 344/Pressure_-5.csv
 Export Chart Name = Chart 1
 Overwrite = On
END
>export chart""")
results1.Exit()
designPoint3 = Parameters.GetDesignPoint(Name="2")
Parameters.SetBaseDesignPoint(DesignPoint=designPoint3)
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update
EXPORT:
 Export File = C:/Users/mter153/OneDrive - The University of Auckland/Documents/ENGSCI 344/Pressure_5.csv
 Export Chart Name = Chart 1
 Overwrite = On
END
>export chart""")
results1.Exit()
designPoint4 = Parameters.GetDesignPoint(Name="3")
Parameters.SetBaseDesignPoint(DesignPoint=designPoint4)
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update
EXPORT:
 Export File = C:/Users/mter153/OneDrive - The University of Auckland/Documents/ENGSCI 344/Pressure_10.csv
 Export Chart Name = Chart 1
 Overwrite = On
END
>export chart""")
results1.Exit()
designPoint5 = Parameters.GetDesignPoint(Name="4")
Parameters.SetBaseDesignPoint(DesignPoint=designPoint5)
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update
EXPORT:
 Export File = C:/Users/mter153/OneDrive - The University of Auckland/Documents/ENGSCI 344/Pressure_15.csv
 Export Chart Name = Chart 1
 Overwrite = On
END
>export chart""")
results1.Exit()
designPoint6 = Parameters.GetDesignPoint(Name="5")
Parameters.SetBaseDesignPoint(DesignPoint=designPoint6)
results1.Edit()
results1.SendCommand(Command="""VIEW:View 1
  Light Angle = 50, 110
END

VIEW:View 2
  Light Angle = 50, 110
END

VIEW:View 3
  Light Angle = 50, 110
END

VIEW:View 4
  Light Angle = 50, 110
END

> update
EXPORT:
 Export File = C:/Users/mter153/OneDrive - The University of Auckland/Documents/ENGSCI 344/Pressure_20.csv
 Export Chart Name = Chart 1
 Overwrite = On
END
>export chart""")
results1.Exit()
Save(Overwrite=True)
